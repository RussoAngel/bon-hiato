/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package scm;

import bon.BD;
import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;

/**
 *
 * @author yonay
 */
public class UpdateTask extends javax.swing.JFrame {

    /**
     * Creates new form UpdateTask
     */
    private String task;
    private String project;
    private String duration;
    private String id;
    private String idSprint;
    private String developer2;
    BD bd = new BD();
    Connection connection = bd.conexion();

    public UpdateTask() {
        initComponents();
    }

    public UpdateTask(String projectname, String taskname, String dev) {
        initComponents();
        project = projectname;
        task = taskname;
        developer2 = dev;
        jLabel1.setText("<Html>"+project +"/ModificarTarea</Html>");
        priority.addItem("0 - Sin prioridad");
        priority.addItem("1 - Poca prioridad");
        priority.addItem("2 - Prioridad media");
        priority.addItem("3 - Alta prioridad");
        state.addItem("0 - sin empezar");
        state.addItem("1 - desarrollo");
        state.addItem("2 - finalizada");
        state.addItem("3 - bloqueada");
        try{
            Statement st = connection.createStatement();
            ResultSet rs = st.executeQuery("select * from login");
            while(rs.next()){
                if(rs.getString("type").equals("developer") || rs.getString("type").equals("scrumMaster")){
                    Developer.addItem(rs.getString("name"));
                }
            }
        }catch(SQLException e){
            System.out.println("no se pudo acceder");
        }
        try {
            Statement st = connection.createStatement();
            ResultSet rs = st.executeQuery("select * from task");

            while (rs.next()) {

                if (rs.getString("name").equals(task) && rs.getString("Projects").equals(project)) {
                    nameUpdateTask.setText(rs.getString("name"));
                    priority.setSelectedIndex(Integer.parseInt(rs.getString("priority")));
                    descriptionUpdateTask.setText(rs.getString("description"));
                    duration = rs.getString("duration");
                    state.setSelectedIndex(Integer.parseInt(rs.getString("state")));
                    hoursUpdateTask.setText(rs.getString("hours"));
                    Developer.setSelectedItem(rs.getString("develop"));
                    id = rs.getString("id");
                    idSprint = rs.getString("sprint");
                }
            }

        } catch (SQLException e) {
            System.out.println("no se pudo acceder");
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        hoursUpdateTask = new javax.swing.JTextField();
        updateTaskName = new javax.swing.JLabel();
        nameUpdateTask = new javax.swing.JTextField();
        updateTaskPriority = new javax.swing.JLabel();
        updateTaskDescription = new javax.swing.JLabel();
        updateTaskState = new javax.swing.JLabel();
        scroll = new javax.swing.JScrollPane();
        descriptionUpdateTask = new javax.swing.JTextArea();
        canUpdateTask = new javax.swing.JButton();
        updateTaskDeveloper = new javax.swing.JLabel();
        accUpdateTask = new javax.swing.JButton();
        updateTaskHours = new javax.swing.JLabel();
        Developer = new javax.swing.JComboBox<>();
        priority = new javax.swing.JComboBox<>();
        state = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Bon-Hiato");
        setPreferredSize(new java.awt.Dimension(500, 400));
        setResizable(false);

        updateTaskName.setText("Nombre de la tarea");
        updateTaskName.setToolTipText("");

        updateTaskPriority.setText("Prioridad (0-5)");

        updateTaskDescription.setText("Descripci√≥n");

        updateTaskState.setText("Estado (0-3)");

        descriptionUpdateTask.setColumns(20);
        descriptionUpdateTask.setRows(5);
        scroll.setViewportView(descriptionUpdateTask);

        canUpdateTask.setText("Cancelar");
        canUpdateTask.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                canUpdateTaskActionPerformed(evt);
            }
        });

        updateTaskDeveloper.setText("Desarrollador");

        accUpdateTask.setText("Modificar");
        accUpdateTask.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accUpdateTaskActionPerformed(evt);
            }
        });

        updateTaskHours.setText("Horas");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("jLabel1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(accUpdateTask)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 205, Short.MAX_VALUE)
                        .addComponent(canUpdateTask)
                        .addGap(25, 25, 25))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(nameUpdateTask, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(updateTaskName))
                                .addComponent(Developer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(updateTaskDeveloper))
                            .addComponent(updateTaskHours)
                            .addComponent(hoursUpdateTask, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(scroll, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(70, 70, 70))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(27, 27, 27)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(updateTaskPriority)
                                            .addComponent(priority, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(54, 54, 54))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(35, 35, 35)
                                        .addComponent(updateTaskDescription)
                                        .addGap(65, 65, 65)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(updateTaskState)
                                    .addComponent(state, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(21, 21, 21))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(30, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateTaskName)
                    .addComponent(updateTaskPriority)
                    .addComponent(updateTaskState))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameUpdateTask, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(priority, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(state, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(updateTaskDeveloper)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateTaskDescription)
                    .addComponent(Developer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(scroll, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(updateTaskHours)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(hoursUpdateTask, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(canUpdateTask)
                    .addComponent(accUpdateTask))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void canUpdateTaskActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_canUpdateTaskActionPerformed
        // TODO add your handling code here:
        SelectTask selectTask = new SelectTask(project, developer2);
        selectTask.setLocationRelativeTo(null);
        selectTask.setVisible(true);
        dispose();
    }//GEN-LAST:event_canUpdateTaskActionPerformed

    private void accUpdateTaskActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accUpdateTaskActionPerformed
        // TODO add your handling code here:
        if (nameUpdateTask.getText().equals("") || descriptionUpdateTask.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Tiene que indicar el nombre y la descripci√≥n.");
        
        } else {
            try {
                String sql = "UPDATE task set Projects='" + project + "',name='"
                        + nameUpdateTask.getText() + "',duration='" + duration + "',priority='"
                        + priority.getSelectedIndex() + "',description='"
                        + descriptionUpdateTask.getText() + "',state='"
                        + state.getSelectedIndex() + "',hours='"
                        + hoursUpdateTask.getText() + "',develop='"
                        + String.valueOf(Developer.getSelectedItem()) + "',sprint='"
                        + idSprint + "' where id='"
                        + id + "'";
                PreparedStatement pst = connection.prepareStatement(sql);
                pst.execute();
                JOptionPane.showMessageDialog(null, "se ha modificado correctamente la tarea: "+nameUpdateTask.getText());
            } catch (SQLException | HeadlessException e) {
                JOptionPane.showMessageDialog(null, e);
            }
            SelectTask selectTask = new SelectTask(project, developer2);
            selectTask.setLocationRelativeTo(null);
            selectTask.setVisible(true);
            dispose();
    }//GEN-LAST:event_accUpdateTaskActionPerformed
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UpdateTask.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UpdateTask.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UpdateTask.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UpdateTask.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UpdateTask().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> Developer;
    private javax.swing.JButton accUpdateTask;
    private javax.swing.JButton canUpdateTask;
    private javax.swing.JTextArea descriptionUpdateTask;
    private javax.swing.JTextField hoursUpdateTask;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField nameUpdateTask;
    private javax.swing.JComboBox<String> priority;
    private javax.swing.JScrollPane scroll;
    private javax.swing.JComboBox<String> state;
    private javax.swing.JLabel updateTaskDescription;
    private javax.swing.JLabel updateTaskDeveloper;
    private javax.swing.JLabel updateTaskHours;
    private javax.swing.JLabel updateTaskName;
    private javax.swing.JLabel updateTaskPriority;
    private javax.swing.JLabel updateTaskState;
    // End of variables declaration//GEN-END:variables

    
}
