/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package developer;

import bon.BD;
import bon.Login;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.List;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import po.ProductOwner;
import scm.ScrumMaster;
/**
 *
 * @author yonay
 */
public class Task extends javax.swing.JFrame {

    /**
     * Creates new form Task
     */
    BD bd = new BD();
    Connection connection = bd.conexion();
    
    List<String> tareas = new ArrayList<>();
    
    String projectName;
    String developer;
   public Task(){
       initComponents();
   }
    public Task(String task,String develop){
        projectName= task;
        developer=develop;
        initComponents();
        tasksTitle.setText("<Html>"+projectName +"/selectorDeTareas</Html>");
        try{
            Statement st = connection.createStatement();
            ResultSet rs = st.executeQuery("select * from task");
            
            while(rs.next()){
                
                System.out.println(rs.getString("develop"));
                System.out.println(developer);
                if(rs.getString("Projects").equals(projectName) && rs.getString("develop").equals(developer)){
                    tareas.add(rs.getString("name"));
                }
            }
            for (String tarea : tareas) {
            System.out.println(tarea);
            }
            String[] mylist = new String[tareas.size()];
            mylist = tareas.toArray(mylist);
            listTasks.setListData(mylist);
            
        }catch(SQLException e){
            System.out.println("no se pudo acceder");
        }
       
            
        
    }
    
    public boolean estaVacio(){
        
        if(tareas.size()==0){
            return true;
        }
        return false;
    }
    public void tittle(String project){
        tasksTitle.setText("<Html>"+project +"/selectorDeTareas</Html>");
        
    }
   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jRadioButton1 = new javax.swing.JRadioButton();
        tasksTitle = new javax.swing.JLabel();
        tasksTasks = new javax.swing.JLabel();
        scroll = new javax.swing.JScrollPane();
        listTasks = new javax.swing.JList<>();
        modTasks = new javax.swing.JButton();
        canTasks = new javax.swing.JButton();
        infTasks = new javax.swing.JButton();

        jRadioButton1.setText("jRadioButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Bon-Hiato");

        tasksTitle.setText("Proyecto Actual");

        tasksTasks.setText("Tareas");

        scroll.setViewportView(listTasks);

        modTasks.setText("Modificar");
        modTasks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modTasksActionPerformed(evt);
            }
        });

        canTasks.setText("Cancelar");
        canTasks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                canTasksActionPerformed(evt);
            }
        });

        infTasks.setText("Informar");
        infTasks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                infTasksActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(100, 100, 100)
                                .addComponent(tasksTasks))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(42, 42, 42)
                                .addComponent(scroll, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(modTasks, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(canTasks, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(tasksTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(infTasks, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(13, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(tasksTitle))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(infTasks)))
                .addGap(30, 30, 30)
                .addComponent(tasksTasks)
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(scroll, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(modTasks)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(canTasks)))
                .addContainerGap(45, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void modTasksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modTasksActionPerformed
        // TODO add your handling code here:
        String tarea = listTasks.getSelectedValue();
        if(!(tarea == null)){
            UpdateTask updateTask = new UpdateTask(tarea,projectName,developer);
            updateTask.setLocationRelativeTo(null);
            updateTask.setVisible(true);
            dispose();
        }else{
            JOptionPane.showMessageDialog(null, "Seleccione una tarea.");
        }
    }//GEN-LAST:event_modTasksActionPerformed

    private void canTasksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_canTasksActionPerformed
        // TODO add your handling code here:
        
        
        try{
            Statement st = connection.createStatement();
            ResultSet rs = st.executeQuery("select * from login");
            String type="";
            while(rs.next()){    
                if(developer.equals(rs.getString("name"))){
                    type=rs.getString("type");
                }
            }
            if(type.equals("developer")){
                Developer develop = new Developer(developer);
                develop.setLocationRelativeTo(null);
                develop.setVisible(true);
                dispose();
            }else{
                ScrumMaster scr = new ScrumMaster(developer);
                scr.setLocationRelativeTo(null);
                scr.setVisible(true);
                dispose();
            }
            
            
        }catch(SQLException e){
            System.out.println("no se pudo acceder");
        }
    }//GEN-LAST:event_canTasksActionPerformed

    private void infTasksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_infTasksActionPerformed
        // TODO add your handling code here:
        RiskInform riskInform = new RiskInform(developer,projectName);
        riskInform.setLocationRelativeTo(null);
        riskInform.setVisible(true);
        dispose();
    }//GEN-LAST:event_infTasksActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Task.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Task.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Task.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Task.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Task().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton canTasks;
    private javax.swing.JButton infTasks;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JList<String> listTasks;
    private javax.swing.JButton modTasks;
    private javax.swing.JScrollPane scroll;
    private javax.swing.JLabel tasksTasks;
    private javax.swing.JLabel tasksTitle;
    // End of variables declaration//GEN-END:variables
}
